pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
   }
  environment {
        DOCKER_IMAGE = "madan09/java_cicd:${BUILD_NUMBER}"
      }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        // sh 'ls -ltr'
        // build the project and create a JAR file
        sh ' cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://15.206.81.108:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'sonar_token')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonar_token -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build') {
    steps {
        script {
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            }
        }
      }
    stage('Push the artifacts'){
           steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhub_pass', variable: 'dockerpasswd')]) {
                      sh ' docker login -u madan09 -p ${dockerpasswd} '
                    }
                    sh '''
                    echo 'Push to docker hub'
                    docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }
  stage('running container') {
    steps {
        script {
            sh 'docker run -d -p -t ${DOCKER_IMAGE} .'
            }
        }
      }
    }
}

