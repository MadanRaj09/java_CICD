pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
   }
  environment {
        DOCKER_IMAGE = "madan09/java_cicd:${BUILD_NUMBER}"
        }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        // sh 'ls -ltr'
        // build the project and create a JAR file
        sh ' cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://15.206.81.108:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'sonar_token')]) {
           echo ' passed '
          // sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$sonar_token -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build') {
    steps {
        script {
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            }
        }
      }
    stage('Push the artifacts'){
           steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhub_pass', variable: 'dockerpasswd')]) {
                      sh ' docker login -u madan09 -p ${dockerpasswd} '
                    }
                    echo ' Pushing the image '
                    sh 'docker push ${DOCKER_IMAGE}'
                    
                }
            }
        }
   stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "java_CICD"
            GIT_USER_NAME = "MadanRaj09"
        }
        steps {
            withCredentials([string(credentialsId: 'github_pass', variable: 'github')]) {
                sh '''
                    git config user.email "madan@gmail.com"
                    git config user.name "Madan raj"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/4/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${github}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
    }
}

